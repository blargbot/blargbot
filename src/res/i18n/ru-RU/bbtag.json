{
    "debug": {
        "summary": "```js\n           Время выполнения: {active#duration(MS)}ms\n       Переменных присвоено: {committed}\nВремя запроса в базу данных: {database#duration(MS)}ms\n     Общее время выполнения: {total#duration(MS)}ms\n```"
    },
    "limits": {
        "rules": {
            "useCount": {
                "default": "Максимум использований: {count}",
                "requests": "Максимум запросов: {count}",
                "loops": "Максимум циклов: {count}"
            },
            "staffOnly": {
                "default": "Предоставитель прав (автор команды, если это не было изменено) должен быть модератором"
            },
            "disabled": {
                "default": "\\{{subtagName}\\} отключен"
            },
            "disabledIn": {
                "default": "Нельзя использовать в аргументах {subtagNames#map(\\{{}\\})#join(, | или )}"
            }
        }
    },
    "analysis": {
        "unnamed": "Неназванная функция",
        "dynamic": "Динамически вызываемая функция",
        "deprecated": "\\{{name}\\} устарел. Вместо этого используйте `\\{{deprecated}\\}`"
    },
    "subtag": {
        "types": {
            "simple": {
                "name": "Простые",
                "description": "Функции, не требующие аргументов."
            },
            "misc": {
                "name": "Прочие",
                "description": "Прочие функции для общих вещей."
            },
            "array": {
                "name": "Массив",
                "description": "Функции, предназначенные для работы с массивами."
            },
            "json": {
                "name": "JSON",
                "description": "Функции, предназначенные для работы с JSON-объектами."
            },
            "math": {
                "name": "Математика",
                "description": "Функции, предназначенные для математических вычислений."
            },
            "loops": {
                "name": "Циклы",
                "description": "Функции, перебирающие массивы и/или строки."
            },
            "bot": {
                "name": "Blargbot",
                "description": ""
            },
            "message": {
                "name": "Сообщение",
                "description": "Функции, которые связаны с сообщениями."
            },
            "channel": {
                "name": "Канал",
                "description": "Функции, которые связаны с каналами."
            },
            "thread": {
                "name": "Ветки",
                "description": "Функции, которые связаны с ветками."
            },
            "user": {
                "name": "Пользователь",
                "description": "Функции, которые связаны с пользователями."
            },
            "role": {
                "name": "Роль",
                "description": "Функции, которые связаны с ролями."
            },
            "guild": {
                "name": "Сервер",
                "description": "Функции, которые связаны с серверами."
            }
        },
        "variables": {
            "server": {
                "name": "Серверные переменные",
                "description": "Серверные переменные обычно используются, если вы хотите хранить данные на уровне сервера. Однако они хранятся в 2 отдельных «пулах»: один для публичных команд и один для серверных, это означает, что они не могут использоваться для передачи данных между ними.\nПеременные этого типа очень полезны для передачи данных между командами, предназначенными для использования вместе в пределах 1 сервера."
            },
            "author": {
                "name": "Авторские переменные",
                "description": "Авторские переменные привязаны только к автору команды, это значит что они будут доступны только в командах, созданных вами. Это очень полезно, когда у вас есть набор команд, предназначенных для использования людьми между серверами, это позволяет серверам взаимодействовать друг с другом."
            },
            "global": {
                "name": "Глобальные переменные",
                "description": "Глобальные переменные являются полностью публичными, каждый может прочитать **ИЛИ ОТРЕДАКТИРОВАТЬ** ваши глобальные переменные.\nЭто очень полезно, если вам нравится боль."
            },
            "temporary": {
                "name": "Временные переменные",
                "description": "Временные переменные никогда не сохраняются в базу данных, это означает, что переменные этого типа являются самыми быстрыми.\nЕсли вы работаете с данными, которые вам нужно хранить только для последующего использования в рамках одного вызова команды, то вы должны использовать временные переменные, предпочитая их любому другому типу"
            },
            "local": {
                "name": "Локальные переменные",
                "description": "Локальные переменные — это тип переменных, используемый по умолчанию, тогда, когда имя переменной не начинается с одного из других префиксов. Эти переменные доступны только в команде, в которой они были созданы, что означает, что нет никакой возможности поделиться их значениями с любой другой командой.\nЭто полезно, если вы намереваетесь создать одну команду, которую можно использовать везде, так как переменные не ограничиваются одним сервером, только одной командой"
            }
        }
    },
    "subtags": {
        "concat": {
            "default": {
                "description": "Берёт `values` и объединяет их вместе, чтобы сформировать один массив. Если `values` само является массивом, то в конечный массив добавляются его элементы.",
                "exampleOut": "Два массива: [\"this\",\"is\",\"an\",\"array\"]\nСтроки и массив: [\"a\",\"b\",\"c\", 1, 2, 3]",
                "exampleCode": "Два массива: \\{concat;[\"this\", \"is\"];[\"an\", \"array\"]\\}\nСтроки и массив: \\{concat;a;b;c;[1, 2, 3]\\}"
            }
        },
        "filter": {
            "default": {
                "description": "Каждый элемент массива `array` будет последовательно записан в переменную `variable`, и к ней будет применён `code`. Возвращает новый массив, содержащий все элементы, которые вернули значение true.\n\n Внутри `code` нельзя использовать следующие функции: {disabled#map(`\\{{}\\}`)#join(, )}",
                "exampleOut": "[\"apples\",\"apple juice\"]",
                "exampleCode": "\\{set;~array;Apples — яблок;яблочный сок;грейп\\}\n\\{filter;~element;~array;\\{bool;\\{get;~element\\};startswith;apple\\}\\}"
            }
        },
        "isArray": {
            "default": {
                "description": "Определяет, является ли `text` допустимым массивом.",
                "exampleOut": "true false",
                "exampleCode": "\\{isarray;[\"array?\"]\\} \\{isarray;array?\\}"
            }
        },
        "join": {
            "default": {
                "description": "Объединяет элементы массива `array` вместе с `text` в качестве разделителя.",
                "exampleOut": "this!is!an!array",
                "exampleCode": "\\{join;[\"this\", \"is\", \"an\", \"array\"];!\\}"
            }
        },
        "map": {
            "default": {
                "description": "Предоставляет способ заполнить массив путем выполнения функции над каждым из его элементов, более подробная информация [здесь](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\nКаждый элемент в массиве `array` будет последовательно записан в переменную `variable`. Результат функции `function`, применной к старому значению элемента, будет новым значением элемента. Возвращает новый массив и не изменяет оригинал.",
                "exampleOut": "[\"APPLES\",\"ORANGES\",\"PEARS\"]",
                "exampleCode": "\\{map;~item;[\"apples\",\"oranges\",\"pears\"];\\{upper;\\{get;~item\\}\\}\\}"
            }
        },
        "pop": {
            "default": {
                "description": "Возвращает последний элемент массива `array`. Если указана переменная, то он также удалит из массива последний элемент.",
                "exampleOut": "array",
                "exampleCode": "\\{pop;[\"this\", \"is\", \"an\", \"array\"]\\}"
            }
        },
        "push": {
            "default": {
                "description": "Добавляет `values` в конец массива `array`. Если указана переменная, её значение будет обновлено. В противном случае будет просто выведен новый массив.",
                "exampleOut": "[\"this\",\"is\",\"an\",\"array\"]",
                "exampleCode": "\\{push;[\"this\", \"is\", \"an\"];array\\}"
            }
        },
        "shift": {
            "default": {
                "description": "Возвращает первый элемент массива `array`. Если указана переменная, то он также удалит из массива первый элемент.",
                "exampleOut": "this",
                "exampleCode": "\\{shift;[\"this\", \"is\", \"an\", \"array\"]\\}"
            }
        },
        "shuffle": {
            "args": {
                "description": "Смешивает `\\{args\\}`, указанные пользователем.",
                "exampleIn": "one two three",
                "exampleOut": "three one two",
                "exampleCode": "\\{shuffle\\} \\{args;0\\} \\{args;1\\} \\{args;2\\}"
            },
            "array": {
                "description": "Перемешивает `\\{args\\}` предоставленный пользователем или элементы массива `array`. Если используется с переменной, то будет изменен исходный массив",
                "exampleOut": "[5,3,2,6,1,4]",
                "exampleCode": "\\{shuffle;[1,2,3,4,5,6]\\}"
            }
        },
        "slice": {
            "default": {
                "description": "Берет элементы между `start` и `end` (включительно) из массива `array`. Индексы в массиве начинаются с 0.",
                "exampleOut": "[\"is\",\"an\",\"array\"]",
                "exampleCode": "\\{slice;[\"this\", \"is\", \"an\", \"array\"];1\\}"
            }
        },
        "sort": {
            "default": {
                "description": "Сортирует массив в порядке возрастания. Если 'descending' указан, то сортирует в порядке убывания. Если указана переменная, изменит исходный массив.",
                "exampleOut": "[1,2,3,4,5]",
                "exampleCode": "\\{sort;[3, 2, 5, 1, 4]\\}"
            }
        },
        "splice": {
            "description": "Если используется с переменной, то модифицирует изначальный массив.\nВозвращает массив удаленных элементов.",
            "delete": {
                "description": "Удаляет указанное в аргументе `deleteCount` количество элементов из массива `array`, начиная со `start`.",
                "exampleOut": "[\"is\"]",
                "exampleCode": "\\{splice;[\"this\", \"is\", \"an\", \"array\"];1;1\\}"
            },
            "replace": {
                "description": "Удаляет указанное в аргументе `deleteCount` количество элементов из массива `array`, начиная со `start`. Затем добавляет каждый элемент `item` на эту позицию в `array`. Возвращает удалённые элементы.",
                "exampleOut": "[\"is\"] \\{\"v\":[\"это\",\"был\",\"в\",\"array\"],\"n\":\"~array\"\\}",
                "exampleCode": "\\{set;~array;[\"this\", \"is\", \"an\", \"array\"]\\} \\{splice;\\{get;~array\\};1;was\\} \\{get;~array\\}"
            }
        },
        "split": {
            "default": {
                "description": "Разделяет текст `text`, используя `splitter`, и возвращает массив.",
                "exampleOut": "[\"Hello!\",\"This\",\"is\",\"a\",\"sentence.\"]",
                "exampleCode": "\\{split;Hello! This is a sentence.;\\{space\\}\\}"
            }
        },
        "apply": {
            "default": {
                "description": "Выполняет функцию `subtag`, используя `args` в качестве аргументов. Если `args` является массивом, он будет разобран до его отдельных элементов.",
                "exampleOut": "3",
                "exampleCode": "\\{apply;randomInt;[1,4]\\}"
            }
        },
        "args": {
            "all": {
                "description": "Возвращает всё то, что ввёл пользователь",
                "exampleIn": "Hello world! BBtag is so cool",
                "exampleOut": "You said Hello world! BBtag is so cool",
                "exampleCode": "You said \\{args\\}"
            },
            "indexed": {
                "description": "",
                "exampleIn": "Hello world! BBtag is so cool",
                "exampleOut": "world!",
                "exampleCode": "\\{args;1\\}"
            },
            "range": {
                "description": "",
                "exampleIn": "Hello world! BBtag is so cool",
                "exampleOut": "BBtag is",
                "exampleCode": "\\{args;2;4\\}"
            }
        },
        "commandName": {
            "default": {
                "description": "Получает имя текущей команды.",
                "exampleIn": "b!cc test",
                "exampleOut": "This command is test",
                "exampleCode": "This command is \\{commandName\\}"
            }
        },
        "commit": {
            "description": "По соображениям оптимизации переменные не сохраняются в базу данных сразу при использовании `\\{set\\}`. Вместо этого они кэшируются и сохраняются в базу данных после завершения команды. Если у вас есть переменные `variables`, которые необходимо немедленно сохранить в базу данных, используйте эту функцию для принудительного сохранения прямо во время исполнения команды.\nЭто ухудшает производительность, поэтому используйте только когда это необходимо.\n`variables` по умолчанию это все значения, установленные до этого момента.\n`\\{rollback\\}` — противоположность этой функции.",
            "all": {
                "description": "",
                "exampleOut": "Hello!",
                "exampleCode": "\\{set;var;Hello!\\}\n\\{commit\\}\n\\{set;var;GoodBye!\\}\n\\{rollback\\}\n\\{get;var\\}"
            },
            "variables": {
                "description": "",
                "exampleOut": "Hello!",
                "exampleCode": "\\{set;var;Hello!\\}\n\\{commit;var\\}\n\\{set;var;GoodBye!\\}\n\\{rollback;var\\}\n\\{get;var\\}"
            }
        },
        "debug": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "dump": {
            "default": {
                "description": "Отправляет предоставленный текст на специально сгенерированную страницу на сайте blargbot. Страница будет удалена через 7 дней.",
                "exampleOut": "https://blargbot.xyz/output/111111111111111111",
                "exampleCode": "\\{dump;Hello, world!\\}"
            }
        },
        "execTag": {
            "default": {
                "description": "Выполняет общедоступную команду `name`, передавая ей `args` в качестве аргументов. Полезно для модулей.\n`\\{execTag\\}` выполняет команду так, как если бы ее код был просто скопирован в корневую команду.",
                "exampleOut": "Let me do a tag for you. User#1111 has paid their respects. Total respects given: 5",
                "exampleCode": "Let me do a tag for you. \\{execTag;f\\}"
            }
        },
        "execCustomCommand": {
            "default": {
                "description": "Выполняет серверную команду `name`, передавая ей `args` в качестве аргументов. Полезно для модулей.\n`\\{execCustomCommand\\}` выполняет команду так, как если бы ее код был просто скопирован в корневую команду.",
                "exampleOut": "Let me do a command for you. User#1111 has paid their respects. Total respects given: 5",
                "exampleCode": "Let me do a command for you. \\{execCustomCommand;f\\}"
            }
        },
        "fallback": {
            "clear": {
                "description": "Если функцию не удалось исполнить, сообщение об ошибке будет заменено на текст `message`.",
                "exampleOut": "This tag failed",
                "exampleCode": "\\{fallback;This tag failed\\} \\{abc\\}"
            },
            "set": {
                "description": "Сбрасывает установленное пользовательское сообщение об ошибке на стандартное.",
                "exampleOut": "This tag failed  `Unknown subtag xyz`",
                "exampleCode": "\\{fallback;This tag failed\\} \\{abc\\} \\{fallback\\} \\{xyz\\}"
            }
        },
        "flag": {
            "default": {
                "description": "Возвращает содержимое указанного пользователем флага (флаги зависимы от регистра, -a и -A — это разные флаги). Используйте `_`, чтобы получить часть пользовательского ввода, не относящуюся ни к одному из флагов.",
                "exampleIn": "Hello, -a world!",
                "exampleOut": "world! Hello,",
                "exampleCode": "\\{flag;a\\} \\{flag;_\\}"
            }
        },
        "flagsArray": {
            "default": {
                "description": "Возвращает массив всех указанных флагов.",
                "exampleIn": "Hello -dc world",
                "exampleOut": "[\"_\",\"d\",\"c\"]",
                "exampleCode": "\\{flagsArray\\}"
            }
        },
        "flagSet": {
            "default": {
                "description": "Возвращает `true` или `false` в зависимости от того, указал ли пользователь флаг (флаги зависимы от регистра, -a и -A — это разные флаги).",
                "exampleIn": "Hello, -a world!",
                "exampleOut": "true false",
                "exampleCode": "\\{flagSet;a\\} \\{flagSet;_\\}"
            }
        },
        "function": {
            "default": {
                "description": "",
                "exampleOut": "[\"1\",\"2\",\"3\",\"4\"]",
                "exampleCode": "\\{function;test;\\{paramsArray\\}\\} \\{func.test;1;2;3;4\\}"
            }
        },
        "get": {
            "value": {
                "description": "Возвращает сохраненную переменную `varName`.\nВам необходимо использовать префикс для указания области вашей переменной.\nДопустимые области видимости: {scopes#map({prefix#bool(`{}`|без префикса)} ({name}))#join(, | и )}. Для получения дополнительной информации используйте `b!t docs variable` или `b!cc docs variable`",
                "exampleOut": "This is local var1\nThis is temporary var2",
                "exampleCode": "\\{set;var1;This is local var1\\}\n\\{set;~var2;This is temporary var2\\}\n\\{get;var1\\}\n\\{get;~var2\\}"
            },
            "index": {
                "description": "Когда переменная `name` является массивом, она возвращает элемент с индексом `index`. Если `index` не указан, будет возвращен весь массив. Когда переменная не является массивом, возвращается вся переменная.",
                "exampleOut": "def",
                "exampleCode": "\\{set;myArray;[\"abc\",\"def\",\"ghi\"]\\}\\{get;myArray;1\\}"
            }
        },
        "inject": {
            "default": {
                "description": "Выполняет произвольный код BBTag, который находится внутри `code` и возвращает результат. Полезно для создания динамического кода или в качестве инструмента тестирования (`\\{inject;\\{args\\}\\}`)",
                "exampleOut": "Random Number: 3",
                "exampleCode": "Random Number: \\{inject;\\{lb\\}randomInt\\{semi\\}1\\{semi\\}4\\{rb\\}\\}"
            }
        },
        "lock": {
            "default": {
                "description": "Предоставляет функцию чтения и записи bbtag. Это очень продвинутая функция, поэтому рекомендуется сначала [прочитать о понятии блокировки](https://en.wikipedia.org/wiki/Lock_(computer_science)).\n\nЕсли говорить просто, блокировка позволяет командам, работающим одновременно, сотрудничать и дожидаться завершения действий друг друга, прежде чем «освободиться от блокировки» и позволить другим командам использовать эту блокировку. Блокировки могут быть использованы для защиты данных от редактирования двумя командами одновременно и несоответствий, к которым подобное редактирование может привести.\n\nОдновременно может использоваться несколько блокировок `read` или одна блокировка `write`. Это означает, что если ваша команда читает некоторые данные, то пока она не меняет их значения, это будет разрешено, в противном случае команда будет ждать до тех пор, пока она не получит доступ к блокировке.\n\n`mode` должен быть `read` или `write`.\n`key` может быть любой текстовой строкой. К ней может быть добавлен префикс по тем же правилам области видимости, что и для переменных.\n`code` будет запущен после получения блокировки",
                "exampleOut": "\nStart\nMiddle\nEnd\nStart\nMiddle\nEnd\nThis order is guaranteed always. Without a lock it isn't",
                "exampleCode": "\n\\{//;в двух быстро запускаемых подряд командах\\}\n\\{lock;write;key;\n  \\{void;\n    \\{send;\\{channelId\\};Start\\}\n    \\{send;\\{channelId\\};Middle\\}\n    \\{send;\\{channelId\\};End\\}\n  \\}\n\\}\nThis order is guaranteed always. Without a lock it isn't"
            }
        },
        "modLog": {
            "description": "Если `moderator` не указан, по умолчанию будет использоваться blargbot.",
            "default": {
                "description": "Создает пользовательскую запись в журнале модерации с указанным действием `action`, пользователем `user` и причиной `reason`. Цвет `color` может быть [HTML color](https://www. 3schools.com/colors/colors_names.asp), hex, (r,g,b) или допустимым номером цвета.",
                "exampleOut": "You did a bad! (в журнале модерации сделана запись с белым цветом эмбеда и причиной 'They did a bad!')",
                "exampleCode": "You did a bad! \\{modLog;Bad;\\{userId\\};;They did a bad;#ffffff\\}"
            }
        },
        "nsfw": {
            "default": {
                "description": "Отмечает вывод как NSFW и разрешает использование команды только в NSFW-каналах. Функция обязательна для использования в командах, имеющих NSFW-содержимое. `message` — это текст ошибки, выдаваемой при использовании команды вне NSFW-канала",
                "exampleOut": "This command is not safe!",
                "exampleCode": "This command is not safe! \\{nsfw\\}"
            }
        },
        "params": {
            "all": {
                "description": "",
                "exampleOut": "You gave the parameters `Hello world! BBtag is so cool`",
                "exampleCode": "\\{func;test;You gave the parameters `\\{params\\}`\\}\n\\{func.test;Hello world!;BBtag is so cool\\}"
            },
            "indexed": {
                "description": "",
                "exampleOut": "The first parameter is `Hello world!`",
                "exampleCode": "\\{func;test;The first parameter is `\\{params;0\\}`\\}\n\\{func.test;Hello world!;BBtag is so cool\\}"
            },
            "range": {
                "description": "",
                "exampleOut": "C D",
                "exampleCode": "\\{func;test;The first parameter is `\\{params;2;4\\}`\\}\n\\{func.test;A;B;C;D;E;F\\}"
            }
        },
        "paramsArray": {
            "default": {
                "description": "",
                "exampleOut": "[\"a\",\"b\",\"c\",\"d\"]",
                "exampleCode": "\\{func.test;\\{paramsArray\\}\\}\n\\{func.test;a;b;c;d\\}"
            }
        },
        "paramsLength": {
            "default": {
                "description": "",
                "exampleOut": "[\"a\",\"b\",\"c\",\"d\"]",
                "exampleCode": "\\{func.test;\\{paramsLength\\}\\}\n\\{func.test;a;b;c;d\\}"
            }
        },
        "prefix": {
            "default": {
                "description": "Получает префикс команды, используемой для вызова кода bbtag, содержащего эту функцию.",
                "exampleOut": "Your prefix is b!",
                "exampleCode": "Your prefix is \\{prefix\\}"
            }
        },
        "quiet": {
            "default": {
                "description": "",
                "exampleOut": "cat",
                "exampleCode": "\\{quiet\\} \\{userMention;cat\\}"
            }
        },
        "reason": {
            "default": {
                "description": "Устанавливает причину для следующего вызова API (напр. roleAdd, roleRemove, ban и т. д.). Если `reason` пуст причина будет пустой",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "request": {
            "description": "Только некоторые разрешенные домены могут быть использованы для `url`. Смотрите [здесь](https://blargbot.xyz/domains), чтобы увидеть список. Он выводит JSON-объект со следующей структурой. Рекомендуется использовать \\{jsonGet\\}, чтобы перемещаться по нему.\n```json\n\\{\n  \"body\": \\{\\}, // тело запроса\n  \"status\": 200, // HTTP-код статуса\n  \"statusText\": \"OK\", // человекочитаемый перевод кода статуса\n  \"date\": \"Thu, 1 Янв 1970 00:00:00 GMT\", // дата, отправленная в заголовки\n  \"contentType\": \"application/json\", // тип содержимого ответа\n  \"url\": \"https://fancy.url/here\" // запрошенный url\n\\}\n```",
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": "\\{jGet;\\{request;https://example.com/update/user;\\{jset;;method;POST\\};\\{jset;;user;Stupid cat\\}\\};body\\}"
            }
        },
        "return": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "rollback": {
            "description": "",
            "all": {
                "description": "",
                "exampleOut": "",
                "exampleCode": "\\{set;var;Hello!\\}\n\\{commit\\}\n\\{set;var;GoodBye!\\}\n\\{rollback\\}\n\\{get;var\\}"
            },
            "variables": {
                "description": "",
                "exampleOut": "Hello!",
                "exampleCode": "\\{set;var;Hello!\\}\n\\{commit;var\\}\n\\{set;var;GoodBye!\\}\n\\{rollback;var\\}\n\\{get;var\\}"
            }
        },
        "set": {
            "clear": {
                "description": "",
                "exampleOut": "(ничего не выведется)",
                "exampleCode": "\\{set;~var;something\\}\n\\{set;~var\\}\n\\{get;~var\\}"
            },
            "value": {
                "description": "",
                "exampleOut": "This is local var1\nThis is temporary var2",
                "exampleCode": "\\{set;var1;This is local var1\\}\n\\{set;~var2;This is temporary var2\\}\n\\{get;var1\\}\n\\{get;~var2\\}"
            },
            "array": {
                "description": "",
                "exampleOut": "\\{\"v\":[\"this\",\"is\",\"an\",\"array\"],\"n\":\"var3\"\\}",
                "exampleCode": "\\{set;var3;this;is;an;array\\}\n\\{get;var3\\}"
            }
        },
        "sleep": {
            "default": {
                "description": "",
                "exampleOut": "(Через 10 секунд) Hi!",
                "exampleCode": "\\{sleep;10s\\}\\{send;\\{channelId\\};Hi!\\}"
            }
        },
        "subtagExists": {
            "default": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{subtagExists;ban\\} \\{subtagExists;AllenKey\\}"
            }
        },
        "suppressLookup": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{suppressLookup\\}"
            }
        },
        "throw": {
            "default": {
                "description": "",
                "exampleOut": "Custom Error",
                "exampleCode": "\\{throw;Custom Error\\}"
            }
        },
        "timer": {
            "default": {
                "description": "",
                "exampleOut": "(Через 20 секунд) Hello!",
                "exampleCode": "\\{timer;Hello!;20s\\}"
            }
        },
        "channelCategories": {
            "default": {
                "description": "",
                "exampleOut": "This guild has 7 categories.",
                "exampleCode": "This guild has \\{length;\\{categories\\}\\} categories."
            }
        },
        "channelCategory": {
            "current": {
                "description": "",
                "exampleOut": "111111111111111",
                "exampleCode": "\\{channelCategory\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "111111111111111\n(nothing is returned here)",
                "exampleCode": "\\{channelCategory;cool channel\\}\n\\{channelCategory;cool category\\}"
            }
        },
        "channelCreate": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "22222222222222222",
                "exampleCode": "\\{channelCreate;super-channel;;\\{json;\\{\"parentId\":\"11111111111111111\"\\}\\}\\}"
            }
        },
        "channelDelete": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{channelDelete;11111111111111111\\}"
            }
        },
        "channelEdit": {
            "default": {
                "description": "",
                "exampleOut": "11111111111111111",
                "exampleCode": "\\{channelEdit;11111111111111111;\\{j;\\{\"name\": \"super-cool-channel\"\\}\\}\\}"
            }
        },
        "channelId": {
            "current": {
                "description": "",
                "exampleOut": "111111111111111",
                "exampleCode": "\\{channelId\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "111111111111111\n(в этой строке ничего не выведется)",
                "exampleCode": "\\{channelId;cool channel\\}\n\\{channelId;some channel that doesn't exist;true\\}"
            }
        },
        "channelIsCategory": {
            "default": {
                "description": "",
                "exampleOut": "true\n(в этой строке ничего не выведется)",
                "exampleCode": "\\{channelIsCategory;cool category\\}\n\\{channelIsCategory;category that doesn't exist\\}"
            }
        },
        "channelIsNsfw": {
            "current": {
                "description": "",
                "exampleOut": "fluffy bunnies",
                "exampleCode": "\\{if;\\{channelIsNsfw\\};Spooky nsfw stuff;fluffy bunnies\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{channelIsNsfw;SFW Cat pics\\}"
            }
        },
        "channelIsText": {
            "current": {
                "description": "",
                "exampleOut": "Yeah you can write stuff here",
                "exampleCode": "\\{if;\\{channelIsText\\};Yeah you can write stuff here;How did you even call the command?\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{channelIsText;feature discussions\\}"
            }
        },
        "channelIsThread": {
            "current": {
                "description": "",
                "exampleOut": "Cool, this is a thread channel!",
                "exampleCode": "\\{if;\\{channelIsThread\\};Cool, this is a thread channel!;Boo, this is a regular text channel\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{channelIsThread;blargbot podcast\\}"
            }
        },
        "channelIsVoice": {
            "current": {
                "description": "",
                "exampleOut": "Yeah you can write stuff here",
                "exampleCode": "\\{if;\\{channelIsVoice\\};How did you even call the command?;Yeah you can write stuff here\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{channelIsVoice;blargbot podcast\\}"
            }
        },
        "channelName": {
            "current": {
                "description": "",
                "exampleOut": "This channel's name is test-channel",
                "exampleCode": "This channel's name is \\{channelName\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "cooler-test-channel",
                "exampleCode": "\\{channelName;111111111111111\\}"
            }
        },
        "channelPosition": {
            "description": "",
            "current": {
                "description": "",
                "exampleOut": "This channel is in position 1",
                "exampleCode": "This channel is in position \\{channelPosition\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "The position of test-channel is 0",
                "exampleCode": "The position of test-channel is \\{channelPosition;test-channel\\}"
            }
        },
        "channels": {
            "current": {
                "description": "",
                "exampleOut": "This guild has \\{length;\\{channels\\}\\} channels.",
                "exampleCode": "This guild has \\{length;\\{channels\\}\\} channels."
            },
            "channel": {
                "description": "",
                "exampleOut": "Category cat-channels has 6 channels.",
                "exampleCode": "Category cat-channels has \\{length;\\{channels;cat-channels\\}\\} channels."
            }
        },
        "channelSetPermissions": {
            "current": {
                "description": "",
                "exampleOut": "11111111111111111",
                "exampleCode": "\\{channelSetPermissions;11111111111111111;member;222222222222222222\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "11111111111111111",
                "exampleCode": "\\{channelSetPermissions;11111111111111111;member;222222222222222222;1024;2048\\}"
            }
        },
        "channelSetPosition": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{channelSetPosition;11111111111111111;5\\}"
            }
        },
        "channelType": {
            "description": "",
            "current": {
                "description": "",
                "exampleOut": "text",
                "exampleCode": "\\{channelType\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "voice\n(в этой строке ничего не выведется)",
                "exampleCode": "\\{channelType;cool channel\\}\n\\{channelType;some channel that doesn't exist;true\\}"
            }
        },
        "lastMessageId": {
            "description": "",
            "current": {
                "description": "",
                "exampleOut": "1111111111111111",
                "exampleCode": "\\{lastMessageId\\}"
            },
            "channel": {
                "description": "",
                "exampleOut": "2222222222222222",
                "exampleCode": "\\{lastMessageId;1111111111111111\\}"
            }
        },
        "slowMode": {
            "clearCurrent": {
                "description": "",
                "exampleOut": "(медленный режим теперь отключен)",
                "exampleCode": "\\{slowMode\\}"
            },
            "clearChannel": {
                "description": "",
                "exampleOut": "(медленный режим отключен в канале testing-grounds)",
                "exampleCode": "\\{slowMode;testing-grounds\\}"
            },
            "setCurrent": {
                "description": "",
                "exampleOut": "(медленный режим активирован, с интервалом 10 секунд)",
                "exampleCode": "\\{slowMode;10\\}"
            },
            "setChannel": {
                "description": "",
                "exampleOut": "(медленный режим активирован в канале testing-grounds, с интервалом 10 секунд)\n(медленный режим активирован в текущем канале, с интервалом 50 секунд)",
                "exampleCode": "\\{slowMode;testing-grounds;10\\}\n\\{slowMode;50;не имеет значения\\}"
            }
        },
        "emojiCreate": {
            "default": {
                "description": "",
                "exampleOut": "11111111111111111",
                "exampleCode": "\\{emojiCreate;fancy_emote;https://some.cool/image.png;[\"Cool gang\"]\\}"
            }
        },
        "emojiDelete": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{emojiDelete;11111111111111111\\}"
            }
        },
        "emojis": {
            "description": "",
            "all": {
                "description": "",
                "exampleOut": "This guild has 23 emojis.",
                "exampleCode": "This guild has \\{length;\\{emojis\\}\\} emojis."
            },
            "forRole": {
                "description": "",
                "exampleOut": "Cool gang has 6 emojis.",
                "exampleCode": "Cool gang has \\{length;\\{emojis;Cool gang\\}\\} emojis."
            }
        },
        "guildBans": {
            "default": {
                "description": "",
                "exampleOut": "This guild has 123 banned users.",
                "exampleCode": "This guild has \\{length;\\{guildBans\\}\\} banned users."
            }
        },
        "guildCreatedAt": {
            "default": {
                "description": "",
                "exampleOut": "This guild was created on 2016/01/01 01:00:00",
                "exampleCode": "This guild was created on \\{guildCreatedAt;YYYY/MM/DD HH:mm:ss\\}"
            }
        },
        "guildFeatures": {
            "default": {
                "description": "",
                "exampleOut": "[\"COMMUNITY\",\"COMMERCE\",\"NEWS\",\"PREVIEW_ENABLED\",\"WELCOME_SCREEN_ENABLED\",\"MEMBER_VERIFICATION_GATE_ENABLED\",\"THREADS_ENABLED\"]",
                "exampleCode": "\\{guildFeatures\\}"
            }
        },
        "guildIcon": {
            "default": {
                "description": "",
                "exampleOut": "The guild's icon is (icon url)",
                "exampleCode": "The guild's icon is \\{guildIcon\\}"
            }
        },
        "guildId": {
            "default": {
                "description": "",
                "exampleOut": "The guild's id is 1234567890123456",
                "exampleCode": "The guild's id is \\{guildId\\}"
            }
        },
        "guildMembers": {
            "default": {
                "description": "",
                "exampleOut": "This guild has 123 members.",
                "exampleCode": "This guild has \\{length;\\{guildMembers\\}\\} members."
            }
        },
        "guildName": {
            "default": {
                "description": "",
                "exampleOut": "This guild's name is TestGuild.",
                "exampleCode": "This guild's name is \\{guildName\\}."
            }
        },
        "guildOwnerId": {
            "default": {
                "description": "",
                "exampleOut": "The owner's id is 1234567890123456.",
                "exampleCode": "The owner's id is \\{guildOwnerId\\}."
            }
        },
        "guildSetIcon": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{guildSetIcon;https://some.cool/image.png\\}"
            }
        },
        "guildSize": {
            "default": {
                "description": "",
                "exampleOut": "This guild has 123 members.",
                "exampleCode": "This guild has \\{guildSize\\} members."
            }
        },
        "json": {
            "default": {
                "description": "",
                "exampleOut": "\\{\n  \"key\": \"value\"\n\\}",
                "exampleCode": "\\{json;\\{\n  \"key\": \"value\"\n\\}\\}"
            }
        },
        "jsonClean": {
            "default": {
                "description": "",
                "exampleOut": "\\{\"test\":[]\\}",
                "exampleCode": "\\{jsonClean;\\{j;\\{\"test\":\"[]\"\\}\\}\\}"
            }
        },
        "jsonGet": {
            "parse": {
                "description": "",
                "exampleOut": "one",
                "exampleCode": "\\{jsonGet;\\{j;\\{\n  \"array\": [\n    \"zero\",\n    \\{ \"value\": \"one\" \\},\n    \"two\"\n  ]\n\\}\\};array.1.value\\}"
            },
            "path": {
                "description": "",
                "exampleOut": "one",
                "exampleCode": "\\{jsonGet;\\{j;\\{\n  \"array\": [\n    \"zero\",\n    \\{ \"value\": \"one\" \\},\n    \"two\"\n  ]\n\\}\\};array.1.value\\}"
            }
        },
        "jsonKeys": {
            "default": {
                "description": "",
                "exampleOut": "[\"key\",\"key2\"]",
                "exampleCode": "\\{set;~json;\\{json;\\{\"key\": \"value\", \"key2\" : \"value2\"\\}\\}\n\\{jsonKeys;~json\\}"
            }
        },
        "jsonSet": {
            "delete": {
                "description": "",
                "exampleOut": "\\{\\}",
                "exampleCode": "\\{set;~json;\\{json;\\{\"key\" : \"value\"\\}\\}\\}\n\\{jsonSet;~json;key\\}\n\\{get;~json\\}"
            },
            "set": {
                "description": "",
                "exampleOut": "\\{\"path\":\\{\"to\":\\{\"key\":\"value\"\\}\\}\\}",
                "exampleCode": "\\{jsonSet;;path.to.key;value;create\\}"
            },
            "create": {
                "description": "",
                "exampleOut": "\\{\"path\":\\{\"to\":\\{\"key\":\"value\"\\}\\}\\}",
                "exampleCode": "\\{jsonSet;;path.to.key;value;create\\}"
            }
        },
        "jsonSort": {
            "default": {
                "description": "",
                "exampleOut": "[\n  \"\\{\\\"points\\\":3,\\\"name\\\":\\\"UNO\\\"\\}\",\n  \"\\{\\\"points\\\":6,\\\"name\\\":\\\"Stupid cat\\\"\\}\",\n  \"\\{\\\"points\\\":10,\\\"name\\\":\\\"Blargbot\\\"\\}\",\n  \"\\{\\\"points\\\":12,\\\"name\\\":\\\"Winner\\\"\\}\"\n]",
                "exampleCode": "\\{set;~array;\\{json;[\n  \\{\"points\" : 10, \"name\" : \"Blargbot\"\\},\n  \\{\"points\" : 3, \"name\" : \"UNO\"\\},\n  \\{\"points\" : 6, \"name\" : \"Stupid cat\"\\},\n  \\{\"points\" : 12, \"name\" : \"Winner\"\\}\n]\\}\\}\n\\{jsonStringify;\\{jsonSort;\\{slice;\\{get;~array\\};0\\};points\\};2\\}"
            }
        },
        "jsonStringify": {
            "default": {
                "description": "",
                "exampleOut": "[\n    \"one\",\n    \"two\",\n    \"three\"\n]",
                "exampleCode": "\\{jsonStringify;[\"one\",\"two\",\"three\"]\\}"
            }
        },
        "jsonValues": {
            "default": {
                "description": "",
                "exampleOut": "[\"value\",\"value2\"]",
                "exampleCode": "\\{set;~json;\\{json;\\{\"key\": \"value\", \"key2\" : \"value2\"\\}\\}\n\\{jsonValues;~json\\}"
            }
        },
        "for": {
            "default": {
                "description": "",
                "exampleOut": "0,1,2,3,4,5,6,7,8,9,",
                "exampleCode": "\\{for;~index;0;<;10;\\{get;~index\\},\\}"
            }
        },
        "forEach": {
            "default": {
                "description": "",
                "exampleOut": "I like apples\nI like oranges\nI like c#",
                "exampleCode": "\\{set;~array;apples;oranges;c#\\}\n\\{forEach;~element;~array;I like \\{get;~element\\}\\{newline\\}\\}"
            }
        },
        "repeat": {
            "default": {
                "description": "",
                "exampleOut": "eeeeeeeeee",
                "exampleCode": "\\{repeat;e;10\\}"
            }
        },
        "while": {
            "value": {
                "description": "",
                "exampleOut": "10",
                "exampleCode": "\\{set;~x;0\\}\n\\{set;~end;false\\}\n\\{while;\\{get;~end\\};\n\t\\{if;\\{increment;~x\\};==;10;\n\t\t\\{set;~end;true\\}\n\t\\}\n\\}\n\\{get;~end\\}"
            },
            "condition": {
                "description": "",
                "exampleOut": "1,2,3,4,5,6,7,8,9,10,11,",
                "exampleCode": "\\{set;~x;0\\}\n\\{while;\\{get;~x\\};<=;10;\\{increment;~x\\},\\}"
            }
        },
        "absolute": {
            "value": {
                "description": "",
                "exampleOut": "535",
                "exampleCode": "\\{absolute;-535\\}"
            },
            "array": {
                "description": "",
                "exampleOut": "[535, 123, 42]",
                "exampleCode": "\\{absolute;-535;123;-42\\}"
            }
        },
        "base": {
            "default": {
                "description": "",
                "exampleOut": "255",
                "exampleCode": "\\{base;FF;16;10\\}"
            }
        },
        "decrement": {
            "default": {
                "description": "",
                "exampleOut": "-1,-2,-3,-4,-5,-6,-7,-8,-9,-10",
                "exampleCode": "\\{set;~counter;0\\} \\{repeat;\\{decrement;~counter\\},;10\\}"
            },
            "count": {
                "description": "",
                "exampleOut": "-2,-4,-6,-8,-10,-12,-14,-16,-18,-20",
                "exampleCode": "\\{set;~counter;0\\} \\{repeat;\\{decrement;~counter;-2\\},;10\\}"
            }
        },
        "increment": {
            "default": {
                "description": "",
                "exampleOut": "1,2,3,4,5,6,7,8,9,10",
                "exampleCode": "\\{set;~counter;0\\} \\{repeat;\\{increment;~counter\\},;10\\}"
            },
            "count": {
                "description": "",
                "exampleOut": "2,4,6,8,10,12,14,16,18,20",
                "exampleCode": "\\{set;~counter;0\\} \\{repeat;\\{increment;~counter;-2\\},;10\\}"
            }
        },
        "math": {
            "default": {
                "description": "",
                "exampleOut": "2 + 3 + 6 - 2 = 9",
                "exampleCode": "2 + 3 + 6 - 2 = \\{math;-;\\{math;+;2;3;6\\};2\\}"
            }
        },
        "max": {
            "default": {
                "description": "",
                "exampleOut": "65",
                "exampleCode": "\\{max;50;2;65\\}"
            }
        },
        "min": {
            "default": {
                "description": "",
                "exampleOut": "2",
                "exampleCode": "\\{min;50;2;65\\}"
            }
        },
        "numberFormat": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "123456.79\n123000\n100.1",
                "exampleCode": "\\{numberFormat;123456.789;2\\}\n\\{numberFormat;123456.789;-3\\}\n\\{numberFormat;100.10000;\\}"
            },
            "separator": {
                "description": "",
                "exampleOut": "3,1415\n100.000",
                "exampleCode": "\\{numberFormat;3.1415;4;,\\}\n\\{numberFormat;100000;;;.\\}"
            }
        },
        "parseFloat": {
            "default": {
                "description": "",
                "exampleOut": "NaN 12.34 1.2",
                "exampleCode": "\\{parseFloat;abcd\\} \\{parseFloat;12.34\\} \\{parseFloat;1.2cd\\}"
            }
        },
        "parseInt": {
            "default": {
                "description": "",
                "exampleOut": "NaN 1234 12",
                "exampleCode": "\\{parseInt;abcd\\} \\{parseInt;1234\\} \\{parseInt;12cd\\}"
            }
        },
        "randomInt": {
            "default": {
                "description": "",
                "exampleOut": "You rolled a 5.",
                "exampleCode": "You rolled a \\{randomInt;1;6\\}."
            }
        },
        "round": {
            "default": {
                "description": "",
                "exampleOut": "1",
                "exampleCode": "\\{round;1.23\\}"
            }
        },
        "roundDown": {
            "default": {
                "description": "",
                "exampleOut": "1",
                "exampleCode": "\\{roundDown;1.23\\}"
            }
        },
        "roundUp": {
            "default": {
                "description": "",
                "exampleOut": "2",
                "exampleCode": "\\{roundUp;1.23\\}"
            }
        },
        "delete": {
            "description": "",
            "trigger": {
                "description": "",
                "exampleOut": "(сообщение удалится; я не знаю, как показать это в примере)",
                "exampleCode": "\\{//;The message that triggered this will be deleted\\} \\{delete\\}"
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "(сообщение `111111111111111111` удалится; я не знаю, как показать это в примере)",
                "exampleCode": "\\{//;The message with id `111111111111111111` will be deleted\\}\n\\{delete;111111111111111111\\}"
            },
            "inOther": {
                "description": "",
                "exampleOut": "(the message `2222222222222222` from channel `1111111111111111` got deleted)",
                "exampleCode": "\\{//;The message with id `2222222222222222` from channel `1111111111111111` will be deleted\\}\n\\{delete;111111111111111111;2222222222222222\\}"
            }
        },
        "edit": {
            "description": "",
            "inCurrentText": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{edit;111111111111111111;\\{embedBuild;title:Hello world\\}\\}"
            },
            "inCurrentEmbed": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{edit;111111111111111111;\\{embedBuild;title:Hello world\\}\\}"
            },
            "inCurrentFull": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{edit;111111111111111111;Hello world;\\{embedBuild;title:Foo bar\\}\\}"
            },
            "inOtherText": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{edit;111111111111111111;222222222222222222;Hello world\\}"
            },
            "inOtherEmbed": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{edit;111111111111111111;222222222222222222;Hello world\\}"
            },
            "inOtherFull": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{edit;111111111111111111;222222222222222222;Hello world;\\{embedBuild;title:Foo bar\\}\\}"
            }
        },
        "embed": {
            "default": {
                "description": "",
                "exampleOut": "(эмбед с \"Hello!\" в заголовке)",
                "exampleCode": "\\{embed;\\{lb\\}\"title\":\"Hello!\"\\{rb\\}\\}"
            }
        },
        "embedBuild": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "\\{\"title\":\"hello!\",\"description\":\"I am an example embed\",\"fields\":[\\{\"name\":\"Field 1\",\"value\":\"This is the first field!\"\\},\\{\"name\":\"Field 2\",\"value\":\"This is the next field and is inline!\",\"inline\":true\\}]\\}",
                "exampleCode": "\\{embedBuild;\n  title:hello!;\n  description:I am an example embed;\n  fields.name:Field 1;\n  fields.value:This is the first field!;\n  fields.name:Field 2;\n  fields.value:This is the next field and is inline!;\n  fields.inline:true\n\\}"
            }
        },
        "everyoneMention": {
            "default": {
                "description": "",
                "exampleOut": "@everyone",
                "exampleCode": "\\{everyoneMention\\}"
            }
        },
        "file": {
            "default": {
                "description": "",
                "exampleOut": "(файл, названный readme.txt, содержащий \"Hello, world!\")",
                "exampleCode": "\\{file;Hello, world!;readme.txt\\}"
            }
        },
        "hereMention": {
            "default": {
                "description": "",
                "exampleOut": "@here",
                "exampleCode": "\\{hereMention\\}"
            }
        },
        "messageAttachments": {
            "trigger": {
                "description": "",
                "exampleOut": "You sent the attachments \"[\"https://cdn.discordapp.com/attachments/1111111111111/111111111111111/thisisntreal.png\"]\"",
                "exampleCode": "You sent the attachments \"\\{messageAttachments\\}\""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "Someone sent a message with attachments: \"[\"https://cdn.discordapp.com/attachments/1111111111111/111111111111111/thisisntreal.png\"]\"",
                "exampleCode": "Someone sent a message with attachments: \"\\{messageAttachments;1111111111111\\}\""
            },
            "inOther": {
                "description": "",
                "exampleOut": "Someone sent a message in #support with attachments: \"[\"https://cdn.discordapp.com/attachments/1111111111111/111111111111111/thisisntreal.png\"]\"",
                "exampleCode": "Someone sent a message in #support with attachments: \"\\{messageAttachments;support;1111111111111\\}\""
            }
        },
        "messageEditTime": {
            "description": "",
            "trigger": {
                "description": "",
                "exampleOut": "The edit timestamp of your message is \"1628782144703\"",
                "exampleCode": "The edit timestamp of your message is \"\\{messageEditTime\\}\""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "The edit timestamp of message 11111111111111 is \"1628782144703\"",
                "exampleCode": "The edit timestamp of message 11111111111111 is \"\\{messageEditTime;11111111111111\\}"
            },
            "inOther": {
                "description": "",
                "exampleOut": "Message 11111111111111 in #support was edited at 18:09",
                "exampleCode": "Message 11111111111111 in #support was edited at \\{messageEditTime;support;11111111111111;HH:mm\\}"
            }
        },
        "messageEmbeds": {
            "trigger": {
                "description": "",
                "exampleOut": "You sent an embed: \"[\\{\"title\":\"Hello!\"\\}]\"",
                "exampleCode": ""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "inOther": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "messageId": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "messageReply": {
            "trigger": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "inOther": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "messageSender": {
            "trigger": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "Message 1111111111111 was sent by 2222222222222",
                "exampleCode": "Message 1111111111111 was sent by \\{messageSender;1111111111111\\}"
            },
            "inOther": {
                "description": "",
                "exampleOut": "Message 1111111111111 in #support was sent by 2222222222222",
                "exampleCode": "Message 1111111111111 in #support was sent by \\{messageSender;support;1111111111111\\}"
            }
        },
        "messageText": {
            "trigger": {
                "description": "",
                "exampleCode": "You sent \"b!t test You sent \"\\{messageText\\}\"\"`",
                "exampleOut": "You sent \"text\""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "Message 1111111111111 contained: \"Hello world!\"",
                "exampleCode": "Message 1111111111111 contained: \"\\{messageText;1111111111111\\}\""
            },
            "inOther": {
                "description": "",
                "exampleOut": "Message 1111111111111 in #support contained: \"Spooky Stuff\"",
                "exampleCode": "Message 1111111111111 in #support contained: \"\\{messageText;support;1111111111111\\}\""
            }
        },
        "messageTime": {
            "trigger": {
                "description": "",
                "exampleOut": "The send timestamp of your message is \"1628782144703\"",
                "exampleCode": "The send timestamp of your message is \"\\{messageTime\\}\""
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "The send timestamp of message 11111111111111 is \"1628782144703\"",
                "exampleCode": "The send timestamp of message 11111111111111 is \"\\{messageTime;11111111111111\\}"
            },
            "inOther": {
                "description": "",
                "exampleOut": "Message 11111111111111 in #support was sent at 18:09",
                "exampleCode": "Message 11111111111111 in #support was sent at \\{messageTime;support;11111111111111;HH:mm\\}"
            }
        },
        "messageType": {
            "description": "",
            "trigger": {
                "description": "",
                "exampleOut": "0",
                "exampleCode": "\\{messageType\\}"
            },
            "other": {
                "description": "",
                "exampleOut": "19\n0",
                "exampleCode": "\\{messageType;12345678912345;123465145791\\}\n\\{messageType;1234567891234\\}"
            }
        },
        "output": {
            "default": {
                "description": "",
                "exampleOut": "Hello!",
                "exampleCode": "\\{output;Hello!\\}"
            }
        },
        "reactionAdd": {
            "description": "",
            "output": {
                "description": "",
                "exampleOut": "This will have reactions! (ставятся реакции 🤔 и 👀)",
                "exampleCode": "This will have reactions! \\{reactionAdd;🤔;👀\\}"
            },
            "inCurrent": {
                "description": "",
                "exampleOut": "(на сообщение 11111111111111111 добавлены реакции 🤔 и👀)",
                "exampleCode": "\\{reactionAdd;11111111111111111;🤔;👀\\}"
            },
            "inOther": {
                "description": "",
                "exampleOut": "(на сообщение 22222222222222222 в канале 11111111111111111 добавлены реакции 🤔 и 👀)",
                "exampleCode": "\\{reactionAdd;11111111111111111;22222222222222222;🤔;👀\\}"
            }
        },
        "reaction": {
            "default": {
                "description": "",
                "exampleOut": "[\"111111111111111\",\"12345678912345\",\"3333333333333\",\"✅\"]",
                "exampleCode": "\\{waitReaction;11111111111111111;\\{bool;\\{reaction\\};==;✅\\}\\}"
            }
        },
        "reactionUser": {
            "default": {
                "description": "",
                "exampleOut": "[\"111111111111111\",\"12345678912345\",\"3333333333333\",\"✅\"]",
                "exampleCode": "\\{waitReaction;11111111111111111;\\{bool;\\{reactionUser\\};==;3333333333333\\}\\}"
            }
        },
        "reactionList": {
            "reactions": {
                "description": "",
                "exampleOut": "[\"🤔\", \"👀\"]",
                "exampleCode": "\\{reactionList;111111111111111111\\}"
            },
            "users": {
                "description": "",
                "exampleOut": "[\"278237925009784832\", \"134133271750639616\"]\n[\"134133271750639616\"]",
                "exampleCode": "\\{reactionList;111111111111111111;🤔;👀\\}\n\\{reactionList;222222222222222222;111111111111111111;👀\\}"
            }
        },
        "reactionRemove": {
            "all": {
                "description": "",
                "exampleOut": "(removed all reactions on 12345678901234)",
                "exampleCode": "\\{reactionRemove;12345678901234\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "(удаляются все реакции 🤔 от пользователя 111111111111111111 с сообщения с ID 12345678901234)",
                "exampleCode": "\\{reactionRemove;12345678901234;111111111111111111;🤔\\}"
            }
        },
        "reactionRemoveAll": {
            "default": {
                "description": "",
                "exampleOut": "(удаляются все реакции :thinking: с сообщения с ID 12345678901234)",
                "exampleCode": "\\{reactionRemoveAll;12345678901234;:thinking:\\}"
            }
        },
        "send": {
            "description": "",
            "full": {
                "description": "",
                "exampleOut": "23946728937462847243",
                "exampleCode": "\\{send;\\{channelId\\};Hello there!;\\{embedBuild;title:This is a cool embed\\};Wow, look at this text file!;test.txt\\}"
            },
            "textAndEmbed": {
                "description": "",
                "exampleOut": "349587638464585678545",
                "exampleCode": "\\{send;\\{channelId\\};Hello there!;\\{embedBuild;title:This is a cool embed\\}\\}"
            },
            "textOrEmbed": {
                "description": "",
                "exampleOut": "9458678957457694324",
                "exampleCode": "\\{send;\\{channelId\\};\\{embedBuild;title:This is a cool embed\\}"
            }
        },
        "waitMessage": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "[\"111111111111111\",\"2222222222222\"]",
                "exampleCode": "\\{waitMessage\\}"
            },
            "filtered": {
                "description": "",
                "exampleOut": "[\"111111111111111\", \"103347843934212096\"]",
                "exampleCode": "\\{waitMessage;111111111111111;\\{userId;stupid cat\\};\\{bool;\\{username\\};startswith;stupid\\};50\\}"
            }
        },
        "waitReaction": {
            "description": "",
            "default": {
                "description": "",
                "exampleIn": "(реакция добавляется)",
                "exampleOut": "[\"111111111111111\",\"12345678912345\",\"3333333333333\",\"🤔\"]",
                "exampleCode": "\\{waitReaction;12345678912345;stupid cat\\}"
            },
            "filtered": {
                "description": "",
                "exampleIn": "(какой-нибудь пользователь ставит реакцию 🤔)\n(Blargbot ставит реакцию 🤔)",
                "exampleOut": "[\"111111111111111\",\"12345678912345\",\"134133271750639616\",\"🤔\"]",
                "exampleCode": "\\{waitReaction;12345678912345;[\"\\{userId;stupid cat\\}\",\"\\{userId;blargbot\\}\"];[\"🤔\", \"👀\"];;120\\}"
            }
        },
        "webhook": {
            "description": "",
            "empty": {
                "description": "",
                "exampleOut": "Error executing webhook: Cannot send an empty message",
                "exampleCode": "\\{webhook;1111111111111111;t.OK-en\\}"
            },
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": "\\{webhook;1111111111111111;t.OK-en;This is the webhook content!;\\{json;\\{\"title\":\"This is the embed title!\"\\}\\}\\}"
            },
            "withUser": {
                "description": "",
                "exampleOut": "(в канале вебхука) Some content! (отправлено \"не Blargbot'ом\" с аватаркой Blargbot'а)",
                "exampleCode": "\\{webhook;1111111111111111;t.OK-en;Some content!;;Not blargbot;\\{userAvatar;blargbot\\}\\}"
            },
            "withFile": {
                "description": "",
                "exampleOut": "(в канале вебхука отправляется файл с именем readme.txt, содержащий \"Hello, world!\")",
                "exampleCode": "\\{webhook;1111111111111111;t.OK-en;;;;;Hello, world!;readme.txt\\}"
            }
        },
        "base64Decode": {
            "default": {
                "description": "",
                "exampleOut": "Fancy!",
                "exampleCode": "\\{base64decode;RmFuY3kh\\}"
            }
        },
        "base64Encode": {
            "default": {
                "description": "",
                "exampleOut": "RmFuY3kh!",
                "exampleCode": "\\{base64decode;Fancy!\\}"
            }
        },
        "bool": {
            "default": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{bool;5;<=;10\\}"
            }
        },
        "brainfuck": {
            "default": {
                "description": "",
                "exampleOut": "Hello World!",
                "exampleCode": "\\{brainfuck;-[------->+<]>-.-[->+++++<]>++.+++++++..+++.[--->+<]>-----.---[->+++<]>.-[--->+<]>---.+++.------.--------.-[--->+<]>.\\}"
            }
        },
        "capitalize": {
            "ignoreRest": {
                "description": "",
                "exampleOut": "Hello world!\nHELLO world",
                "exampleCode": "\\{capitalize;hello world!\\}\n\\{capitalize;hELLO world\\}"
            },
            "restLower": {
                "description": "",
                "exampleOut": "Hello world\nHello world\nFoo bar",
                "exampleCode": "\\{capitalize;hELLO WORLD;true\\}\n\\{capitalize;hello WORLD;anything goes here\\}\n\\{capitalize;foo BAR;\\}"
            }
        },
        "choose": {
            "default": {
                "description": "",
                "exampleOut": "I feel like eating pie today.",
                "exampleCode": "I feel like eating \\{choose;1;cake;pie;pudding\\} today."
            }
        },
        "clean": {
            "default": {
                "description": "",
                "exampleOut": "Hello!\nIm here to help",
                "exampleCode": "\\{clean;Hello!  \n\n  Im     here    to help\\}"
            }
        },
        "color": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "[66,134,244]",
                "exampleCode": "\\{color;#4286f4;RGB\\}"
            },
            "convert": {
                "description": "",
                "exampleOut": "#4286f4",
                "exampleCode": "\\{color;[66,134,244];hex;RGB\\}"
            }
        },
        "comment": {
            "default": {
                "description": "",
                "exampleOut": "This is a sentence.",
                "exampleCode": "This is a sentence. \\{//;This is a comment.\\}"
            }
        },
        "decancer": {
            "default": {
                "description": "",
                "exampleOut": "haha im so edgy",
                "exampleCode": "\\{decancer;ḩ̸̪̓̍a̶̗̤̎́h̵͉͓͗̀ā̷̜̼̄ ̷̧̓í̴̯̎m̵͚̜̽ ̸̛̝ͅs̴͚̜̈o̴̦̗̊ ̷͎͋ȩ̵͐d̶͎̂̇g̴̲͓̀͝y̶̠̓̿\\}"
            }
        },
        "escapeBBTag": {
            "default": {
                "description": "",
                "exampleOut": "\\{set;~index;1\\}",
                "exampleCode": "\\{escapeBBTag;\\{set;~index;1\\}\\}"
            }
        },
        "hash": {
            "basic": {
                "description": "",
                "exampleOut": "The hash of brown is 94011702.",
                "exampleCode": "The hash of brown is \\{hash;brown\\}."
            },
            "secure": {
                "description": "",
                "exampleOut": "The hash of brown is 5eb67f9f8409b9c3f739735633cbdf92121393d0e13bd0f464b1b2a6a15ad2dc",
                "exampleCode": "\\{hash;sha256;brown\\}"
            }
        },
        "htmlDecode": {
            "default": {
                "description": "",
                "exampleOut": "<hello, world>",
                "exampleCode": "\\{htmlDecode;&lt;hello, world&gt;\\}"
            }
        },
        "htmlEncode": {
            "default": {
                "description": "",
                "exampleOut": "&lt;hello, world&gt;",
                "exampleCode": "\\{htmlEncode;<hello, world>\\}"
            }
        },
        "if": {
            "description": "",
            "value": {
                "description": "",
                "exampleOut": "This is a custom command!",
                "exampleCode": "\\{if;\\{isCustomCommand\\};This is a custom command!\\}"
            },
            "valueElse": {
                "description": "",
                "exampleOut": "This isn't a custom command!",
                "exampleCode": "\\{if;\\{isCustomCommand\\};This is a custom command!;This isn't a custom command!\\}"
            },
            "conditionThen": {
                "description": "",
                "exampleOut": "Hi stupid cat!",
                "exampleCode": "\\{if;\\{userId\\};==;103347843934212096;Hi stupid cat!\\}"
            },
            "conditionElse": {
                "description": "",
                "exampleOut": "Who are you stranger?",
                "exampleCode": "\\{if;\\{userId\\};==;103347843934212096;Hi stupid cat!;Who are you stranger?\\}"
            }
        },
        "indexOf": {
            "default": {
                "description": "",
                "exampleOut": "The index of \"o\" in \"hello world\" is 4",
                "exampleCode": "The index of \"o\" in \"hello world\" is \\{indexof;hello world;o\\}"
            }
        },
        "lang": {
            "default": {
                "description": "",
                "exampleOut": "This will be displayed with js!.",
                "exampleCode": "This will be displayed with js! \\{lang;js\\}."
            }
        },
        "length": {
            "default": {
                "description": "",
                "exampleIn": "Hello",
                "exampleOut": "What you said is 5 chars long.",
                "exampleCode": "What you said is \\{length;\\{args\\}\\} chars long."
            }
        },
        "logic": {
            "default": {
                "description": "",
                "exampleOut": "false",
                "exampleCode": "\\{logic;&&;true;false\\}"
            }
        },
        "lower": {
            "default": {
                "description": "",
                "exampleOut": "this will become lowercase",
                "exampleCode": "\\{lower;THIS WILL BECOME LOWERCASE\\}"
            }
        },
        "md5": {
            "default": {
                "description": "",
                "exampleOut": "71d97a11f770a34d7f8cf1f1d8749d85",
                "exampleCode": "\\{md5;Woosh whap phew!\\}"
            }
        },
        "newline": {
            "default": {
                "description": "",
                "exampleOut": "Hello,\nworld!",
                "exampleCode": "Hello,\\{newline\\}world!"
            }
        },
        "operator": {
            "%": {
                "description": "",
                "exampleOut": "4 1 0",
                "exampleCode": "\\{%;24;5\\} \\{%;24;5;3\\} \\{%;19;5;4\\}"
            },
            "*": {
                "description": "",
                "exampleOut": "24",
                "exampleCode": "\\{*;1;2;3;4\\}"
            },
            "+": {
                "description": "",
                "exampleOut": "10",
                "exampleCode": "\\{+;1;2;3;4\\}"
            },
            "-": {
                "description": "",
                "exampleOut": "-2",
                "exampleCode": "\\{-;4;3;2;1\\}"
            },
            "/": {
                "description": "",
                "exampleOut": "5 2",
                "exampleCode": "\\{/;5\\} \\{/;120;5;4;3\\}"
            },
            "^": {
                "description": "",
                "exampleOut": "8 256",
                "exampleCode": "\\{^;2;3\\} \\{^;2;2;2;2\\}"
            },
            "<": {
                "description": "",
                "exampleOut": "false false false true",
                "exampleCode": "\\{<;a\\} \\{<;a;b;c;c\\} \\{<;1;2;3;4;2\\} \\{<;a;b;c;d\\}"
            },
            "<=": {
                "description": "",
                "exampleOut": "false true false true",
                "exampleCode": "\\{<=;a\\} \\{<=;a;b;c;c\\} \\{<;1;2;3;4;2\\} \\{<=;a;b;c;d\\}"
            },
            "!=": {
                "description": "",
                "exampleOut": "true true false",
                "exampleCode": "\\{!=;a;b;c\\} \\{!=;a;b;a\\} \\{!=;a;a;b\\}"
            },
            "==": {
                "description": "",
                "exampleOut": "false false false true",
                "exampleCode": "\\{==;a;b;c\\} \\{==;a;b;a\\} \\{==;a;a;b\\} \\{==;a;a;a;a;a\\}"
            },
            ">": {
                "description": "",
                "exampleOut": "false false false true",
                "exampleCode": "\\{>;a\\} \\{>;c;c;b;a\\} \\{>;2;4;3;2;1\\} \\{>;d;c;b;a\\}"
            },
            ">=": {
                "description": "",
                "exampleOut": "false true false true",
                "exampleCode": "\\{>=;a\\} \\{>=;c;c;b;a\\} \\{>=;2;4;3;2;1\\} \\{>=;d;c;b;a\\}"
            },
            "!": {
                "description": "",
                "exampleOut": "false true",
                "exampleCode": "\\{!;true\\} \\{!;false\\}"
            },
            "&&": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{&&;true;true\\} \\{&&;true;false;true\\}"
            },
            "||": {
                "description": "",
                "exampleOut": "false true",
                "exampleCode": "\\{||;false;false\\} \\{||;true;false;true\\}"
            },
            "xor": {
                "description": "",
                "exampleOut": "false false true",
                "exampleCode": "\\{^;false;false\\} \\{^;true;false;true\\} \\{^;false;true;false\\}"
            },
            "contains": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{contains;abcdefghi;abc\\} \\{contains;[\"abc\",\"def\",\"ghi\"];\",\"\\}"
            },
            "includes": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{includes;abcdefghi;abc\\} \\{includes;[\"abc\",\"def\",\"ghi\"];\",\"\\}"
            },
            "endswith": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{endswith;abcdefghi;ghi;hi\\} \\{endswith;[\"abc\",\"def\",\"ghi\"];\"]\\}"
            },
            "startswith": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{startswith;abcdefghi;a;abcd;abc\\} \\{startswith;[\"abc\",\"def\",\"ghi\"];[\"\\}"
            },
            "??": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "pad": {
            "default": {
                "description": "",
                "exampleOut": "000ABC",
                "exampleCode": ""
            }
        },
        "randomChoose": {
            "array": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "args": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "randomString": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": "\\{randomString;abcdefghijklmnopqrstuvwxyz;9\\}"
            }
        },
        "realPad": {
            "default": {
                "description": "",
                "exampleOut": "Hello      world!",
                "exampleCode": "\\{realPad;Hello;10\\} world!"
            },
            "withDirection": {
                "description": "",
                "exampleOut": "000ABC",
                "exampleCode": "\\{realPad;ABC;6;0;left\\}"
            }
        },
        "regexMatch": {
            "default": {
                "description": "",
                "exampleOut": "[\"1\", \"25\"]",
                "exampleCode": "\\{regexMatch;I have $1 and 25 cents;/\\d+/g\\}"
            }
        },
        "regexReplace": {
            "description": "",
            "output": {
                "description": "",
                "exampleOut": "I like to eat pie.",
                "exampleCode": "I like to eat cheese. \\{regexReplace;/cheese/;pie\\}"
            },
            "text": {
                "description": "",
                "exampleOut": "I likn ta cansumn chnnsn.",
                "exampleCode": "I like \\{regexReplace;to consume;/o/gi;a\\} cheese. \\{regexReplace;/e/gi;n\\}"
            }
        },
        "regexSplit": {
            "default": {
                "description": "",
                "exampleOut": "[\"Hello\",\"there\",\"I\",\"am\",\"hungry\"]",
                "exampleCode": "\\{regexSplit;Hello      there, I       am hungry;/[\\s,]+/\\}"
            }
        },
        "regexTest": {
            "default": {
                "description": "",
                "exampleOut": "true false",
                "exampleCode": "\\{regexTest;apple;/p+/i\\} \\{regexTest;banana;/p+/i\\}"
            }
        },
        "replace": {
            "output": {
                "description": "",
                "exampleOut": "Bye world!",
                "exampleCode": "Hello world! \\{replace;Hello;Bye\\}"
            },
            "text": {
                "description": "",
                "exampleOut": "I like to nom ham. ham",
                "exampleCode": "I like \\{replace;to eat;eat;nom\\} cheese. \\{replace;cheese;ham\\}"
            }
        },
        "reverse": {
            "default": {
                "description": "",
                "exampleOut": "emordnilap",
                "exampleCode": "\\{reverse;palindrome\\}"
            }
        },
        "space": {
            "default": {
                "description": "",
                "exampleOut": "Hello,    world!",
                "exampleCode": "Hello,\\{space;4\\}world!"
            }
        },
        "substring": {
            "default": {
                "description": "",
                "exampleOut": "Hello r!",
                "exampleCode": "Hello \\{substring;world;2;3\\}!"
            }
        },
        "switch": {
            "default": {
                "description": "",
                "exampleIn": "hit Danny",
                "exampleOut": "Got it, i'll hit Danny for you!",
                "exampleCode": "\\{switch;\\{args;0\\};\n  hi;Hello!;\n  [\"punch\",\"bop\",\"hit\"];Got it, i'll hit \\{args;1\\} for you!;\n  I don't know how to do that!\n\\}"
            }
        },
        "time": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "Time Berlin (as toTimezone): 23:33\nBerlin from UTC 12:00: 13:00\nBerlin (as fromTimezone): 23:33\nBerlin (as fromTimezone and empty toTimezone): 21:33\nNew York from Berlin (12:00 in Berlin): 06:00",
                "exampleCode": "Berlin (as toTimezone): \\{time;HH:mm;;;;Europe/Berlin\\}\nBerlin from UTC 12:00: \\{time;HH:mm;12:00;HH:mm;;Europe/Berlin\\}\nBerlin (as fromTimezone): \\{time;HH:mm;;;Europe/Berlin\\}\nBerlin (as fromTimezone and empty toTimezone): \\{time;HH:mm;;;Europe/Berlin;\\}\nNew York from Berlin (12:00 in Berlin): \\{time;HH:mm;12:00;HH:mm;Europe/Berlin;America/New_York\\}"
            }
        },
        "trim": {
            "default": {
                "description": "",
                "exampleOut": "Hello beautiful World",
                "exampleCode": "Hello \\{trim;\\{space;10\\}beautiful\\{space;10\\}\\} World"
            }
        },
        "unindent": {
            "default": {
                "description": "",
                "exampleOut": "```\nhello\nworld\n```",
                "exampleCode": "```\n\\{unindent;\n  hello\n  world\n\\}\n```"
            }
        },
        "upper": {
            "default": {
                "description": "",
                "exampleOut": "THIS WILL BECOME UPPERCASE",
                "exampleCode": "\\{upper;this will become uppercase\\}"
            }
        },
        "uriDecode": {
            "default": {
                "description": "",
                "exampleOut": "Hello world!",
                "exampleCode": "\\{uriDecode;Hello%20world\\}"
            }
        },
        "uriEncode": {
            "default": {
                "description": "",
                "exampleOut": "Hello%20world!",
                "exampleCode": "\\{uriEncode;Hello world!\\}"
            }
        },
        "void": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{void;This won't be output!\\}"
            }
        },
        "roleAdd": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "Have a role! true",
                "exampleCode": "Have a role! \\{roleAdd;11111111111111111\\}"
            },
            "other": {
                "description": "",
                "exampleOut": "Stupid cat have a role! true",
                "exampleCode": "Stupid cat have a role! \\{roleAdd;Bot;Stupid cat\\}"
            }
        },
        "roleColor": {
            "default": {
                "description": "",
                "exampleOut": "The admin role id is: #1b1b1b.",
                "exampleCode": "The admin role color is: #\\{roleColor;admin\\}."
            }
        },
        "roleCreate": {
            "default": {
                "description": "",
                "exampleOut": "1298731238361728931",
                "exampleCode": "\\{roleCreate;myNewRole;red\\}"
            }
        },
        "roleDelete": {
            "default": {
                "description": "",
                "exampleOut": "(земля тебе пухом, Супер клёвая роль для всех.)",
                "exampleCode": "\\{roleDelete;Супер клёвая роль для всех\\}"
            }
        },
        "roleId": {
            "default": {
                "description": "",
                "exampleOut": "The admin role id is: 123456789123456.",
                "exampleCode": "The admin role id is: \\{roleId;admin\\}."
            }
        },
        "roleMembers": {
            "default": {
                "description": "",
                "exampleOut": "The admins are: [\"11111111111111111\",\"22222222222222222\"].",
                "exampleCode": "The admins are: \\{roleMembers;Admin\\}."
            }
        },
        "roleMention": {
            "default": {
                "description": "",
                "exampleOut": "The admin role will be mentioned: @Administrator",
                "exampleCode": "The admin role will be mentioned: \\{roleMention;Admin\\}"
            }
        },
        "roleName": {
            "default": {
                "description": "",
                "exampleOut": "The admin role name is: Administrator.",
                "exampleCode": "The admin role name is: \\{roleName;admin\\}."
            }
        },
        "rolePermissions": {
            "default": {
                "description": "",
                "exampleOut": "The admin role's permissions are: 8.",
                "exampleCode": "The admin role's permissions are: \\{rolePermissions;admin\\}."
            }
        },
        "rolePosition": {
            "default": {
                "description": "",
                "exampleOut": "The position of Mayor is 10",
                "exampleCode": "The position of Mayor is \\{rolePosition;Mayor\\}"
            }
        },
        "roleRemove": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "No more role! true",
                "exampleCode": "No more role! \\{roleRemove;11111111111111111\\}"
            },
            "other": {
                "description": "",
                "exampleOut": "Stupid cat no more role! true",
                "exampleCode": "Stupid cat no more role! \\{roleRemove;Bot;Stupid cat\\}"
            }
        },
        "roles": {
            "guild": {
                "description": "",
                "exampleOut": "The roles on this guild are: [\"11111111111111111\",\"22222222222222222\"].",
                "exampleCode": "The roles on this guild are: \\{roles\\}."
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat has the roles: [\"11111111111111111\",\"22222222222222222\"]",
                "exampleCode": "Stupid cat has the roles: \\{roles;Stupid cat\\}"
            }
        },
        "roleSetColor": {
            "clear": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "set": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "roleSetMentionable": {
            "enable": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "set": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "roleSetName": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "roleSetPermissions": {
            "clear": {
                "description": "",
                "exampleOut": "(права были изменены)",
                "exampleCode": "\\{roleSetPermissions;Support\\}"
            },
            "set": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "roleSetPosition": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "roleSize": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "argsArray": {
            "default": {
                "description": "",
                "exampleIn": "",
                "exampleOut": "Your input was [\"Hello\",\"world!\"]",
                "exampleCode": "Your input was \\{argsArray\\}"
            }
        },
        "argsLength": {
            "default": {
                "description": "",
                "exampleIn": "I am saying things.",
                "exampleOut": "You said 4 words.",
                "exampleCode": "You said \\{argsLength\\} words."
            }
        },
        "isCustomCommand": {
            "default": {
                "description": "",
                "exampleOut": "Boo, this only works in cc's",
                "exampleCode": "\\{if;\\{isCustomCommand\\};\\{dm;\\{userId\\};You have mail!\\};Boo, this only works in cc's\\}"
            }
        },
        "lb": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "This is a bracket! \\{",
                "exampleCode": "This is a bracket! \\{lb\\}"
            }
        },
        "rb": {
            "default": {
                "description": "",
                "exampleOut": "This is a bracket! \\}",
                "exampleCode": "This is a bracket! \\{rb\\}"
            }
        },
        "semi": {
            "default": {
                "description": "",
                "exampleOut": "This is a semicolon! ;",
                "exampleCode": "This is a semicolon! \\{semi\\}"
            }
        },
        "tagAuthor": {
            "default": {
                "description": "",
                "exampleOut": "This tag was created by stupid cat",
                "exampleCode": "This tag was created by \\{username;\\{tagAuthor\\}\\}"
            }
        },
        "tagAuthorizer": {
            "default": {
                "description": "",
                "exampleOut": "stupid cat authorized this tag!",
                "exampleCode": "\\{username;\\{tagAuthorizer\\}\\} authorized this tag!"
            }
        },
        "zws": {
            "default": {
                "description": "",
                "exampleOut": "​",
                "exampleCode": "\\{zws\\}"
            }
        },
        "ban": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{ban;Stupid cat;4\\}"
            },
            "withReason": {
                "description": "",
                "exampleOut": "true (stupid cat будет разбанен через 30 дней)",
                "exampleCode": "\\{ban;Stupid cat;;Not clicking enough kittens;30d\\}"
            },
            "noPerms": {
                "description": "",
                "exampleOut": "true (кто угодно может вызвать эту команду, вне зависимости от имеющихся прав)",
                "exampleCode": "\\{ban;Stupid cat;;For being stupid;;сюдаможновставитьчёугодно\\}"
            }
        },
        "dm": {
            "text": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "embed": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "full": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "isStaff": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "isUserBoosting": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "kick": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "withReason": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "pardon": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "withReason": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "randomUser": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "timeout": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "withReason": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "unban": {
            "default": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "withReason": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userActivity": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "You are listening to bad music",
                "exampleCode": "You are listening to \\{userActivity\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat is playing nothing",
                "exampleCode": "Stupid cat is playing \\{userActivity;Stupid cat\\}"
            }
        },
        "userActivityType": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "You are streaming right now!",
                "exampleCode": "You are \\{userActivityType\\} right now!"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat is streaming cats",
                "exampleCode": ""
            }
        },
        "userAvatar": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userBoostDate": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat started boosting this guild on 2020/02/27 00:00:00",
                "exampleCode": "Stupid cat started boosting this guild on \\{userBoostDate;YYYY/MM/DD HH:mm:ss;stupid cat\\}"
            }
        },
        "userCreatedAt": {
            "target": {
                "description": "",
                "exampleOut": "Your account was created on 2017-02-06T18:58:10+00:00",
                "exampleCode": "Your account was created on \\{userCreatedAt\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat's account was created on 2015-10-13T04:27:26Z",
                "exampleCode": "Stupid cat's account was created on \\{userCreatedAt;;Stupid cat\\}"
            }
        },
        "userDiscriminator": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "Your discriminator is 1234",
                "exampleCode": "Your discriminator is \\{userDiscriminator\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat's discriminator is 8160",
                "exampleCode": "Stupid cat's discriminator is \\{userDiscriminator;Stupid cat\\}"
            }
        },
        "userHasRole": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userHasRoles": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userId": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userIsBot": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userJoinedAt": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userMention": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userName": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            },
            "user": {
                "description": "",
                "exampleOut": "",
                "exampleCode": ""
            }
        },
        "userNickname": {
            "target": {
                "description": "",
                "exampleOut": "",
                "exampleCode": "Your nick is \\{userNickname\\}!"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat's nickname is Secretly Awoken",
                "exampleCode": "Stupid cat's nickname is \\{userNickname;Stupid cat\\}!"
            }
        },
        "userRoles": {
            "target": {
                "description": "",
                "exampleOut": "Your roles are [\"1111111111111111\",\"2222222222222222\"]!",
                "exampleCode": "Your roles are \\{userRoles\\}!"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat's roles are [\"1111111111111111\",\"2222222222222222\", \"3333333333333333\"]",
                "exampleCode": "Stupid cat's roles are \\{userRoles;stupid cat\\}"
            }
        },
        "userSetNickname": {
            "default": {
                "description": "",
                "exampleOut": "{}",
                "exampleCode": "\\{userSetNickname;super cool nickname\\}\n\\{//;Reset the the nickname\\}\n\\{userSetNickname;\\}"
            }
        },
        "userSetRoles": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{userSetRoles;[\"1111111111111\"]\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "true",
                "exampleCode": "\\{userSetRoles;[\"1111111111111\"];stupid cat\\}"
            }
        },
        "userStatus": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "You are currently online",
                "exampleCode": "You are currently \\{userStatus\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "Stupid cat is currently online",
                "exampleCode": "Stupid cat is currently \\{userStatus;stupid cat\\}"
            }
        },
        "userTimeout": {
            "description": "",
            "target": {
                "description": "",
                "exampleOut": "You have been timed out until 2021/01/01 00:00:00",
                "exampleCode": "You have been timed out until \\{userTimeout;YYYY/MM/DD HH:mm:ss\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "stupid cat is timed out until 2021/01/01 00:00:00",
                "exampleCode": "stupid cat is timed out until \\{userTimeout;YYYY/MM/DD HH:mm:ss;stupid cat\\}"
            }
        },
        "userTimeZone": {
            "target": {
                "description": "",
                "exampleOut": "UTC",
                "exampleCode": "\\{userTimeZone\\}"
            },
            "user": {
                "description": "",
                "exampleOut": "Discord official's timezone is Europe/Berlin",
                "exampleCode": "Discord official's timezone is \\{userTimeZone;Discord official\\}"
            }
        },
        "warn": {
            "description": "",
            "default": {
                "description": "",
                "exampleOut": "Be warned! 1",
                "exampleCode": "Be warned! \\{warn\\}"
            },
            "withReason": {
                "description": "",
                "exampleOut": "Be warned Stupid cat! 9001",
                "exampleCode": "Be warned Stupid cat! \\{warn;Stupid cat;9001;For being too cool\\}"
            }
        },
        "warnings": {
            "default": {
                "description": "",
                "exampleOut": "You have 0 warning(s)!",
                "exampleCode": "You have \\{warnings\\} warning(s)!"
            }
        }
    }
}